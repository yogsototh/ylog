#!/usr/bin/env zsh
# command line note taking system by directories

log(){print -- $*}
err(){print -- $* >&2; exit 1}

# Usage
app="${0:t}"
(($#==0)) && err "$app is a command line note taking tool

    $app init           -- init a log file
    $app show           -- show all notes
    $app edit           -- open in editor (use EDITOR environment variable)
    $app todo some text -- prepent a todo box ([ ]) before the note
    $app some text      -- add the note to the log file"

# default logfilename
logfilename=".log"

# evil global variables, my Haskell fu is crying!
# in ZSH it would be a pain not to use them
logfile=""
subdir=""

# return the subdir of the project
checkLogfile(){
    local logfiledir=$PWD
    subdir=""
    while [[ ! -e $logfiledir/$logfilename ]]; do
        [[ $logfiledir = / ]] && err "Couldn't find a $logfilename file"
        if [[ $subdir = "" ]]; then
            subdir="${logfiledir:t}"
        else
            subdir="${logfiledir:t}/$subdir"
        fi
        logfiledir="${logfiledir:h}"
    done
    subdir=$subdir
    logfile=$logfiledir/$logfilename
}

# Add a message to the log file
addMessage(){
    {
        print -n "[$(date +"%d-%m-%Y")] "
        [[ $subdir != "" ]] && print -n "($subdir) "
        print -- $*
    } >> $logfile
}


# Special case for init
[[ $1 = "init" ]] && {
    if touch $logfilename; then
        log "log initialized"
        exit 0
    else
        err "can't create $logfilename file"
    fi
}

# if all over cases, search the log file and current subdir
checkLogfile
case $1 in
    show) cat $logfile;;
    edit) [[ $EDITOR = "" ]] && EDITOR="vi"
          $EDITOR $logfile;;
    todo) shift; message="[ ] $*"; addMessage $message ;;
    reset)  print -n -- "Do you really want to remove all your notes? (y/n): "
            read answer
            case ${answer:l} in
            y|yes) echo > $logfile;print "log file emptied";;
            *) exit 0
            esac ;;
    *) addMessage $* ;;
esac
